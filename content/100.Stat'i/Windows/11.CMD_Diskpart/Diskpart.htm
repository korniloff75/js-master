<p>Консольная утилита Diskpart - одна из частоиспользуемых и полезных в своём роде. Она обладает обширным рядом возможностей по управлению физическими дисками, их разделами и томами.</p>
<p>Когда я научился использовать эту утилиту, то отказался от других платных диск-директоров, таких как Acronis, Paragon и проч. Итак, рассмотрим примеры работы с этой утилитой.</p>


<h2>Запуск Diskpart</h2>

<p>Запуск утилиты производится из <a href="/content/100.Stat'i/Windows/10.Cmd/">командной строки</a>, открытой с правами администратора.</p>
<p><code>diskpart</code></p>
<p><img class="toBig" src="{DIR}assets/cmd_dp1.png" alt="Diskpart" />"</p>
<p>После чего в командной строке появится приглашение ввести команду.</p>


<h2>Работа с Diskpart</h2>

<h3>Основные команды</h3>
<p>Синтаксис команд в Diskpart может быть полным и укороченным. Я, естественно, предпочитаю укороченный, поскольку меньше букв вводить нужно. Так что не удивляйтесь операторам типа <em>par</em></p>
<ul>
	<li><code>sel</code> - оператор выбора диска, раздела или тома для использования в качестве целевого объекта.
	<li><code>lis dis</code> - просмотр списка всех подключённых физических дисков к компьютеру. Каждый диск имеет свой уникальный номер, по которому к нему можно будет впоследствии обращаться.
	<li><code>lis vol</code> - просмотр списка всех томов, созданных на всех подключённых дисках.
	<li><code>lis par</code> - просмотр списка всех разделов выбранного физического диска. Для выбора диска используется оператор <em>sel</em>. Например, для просмотра всех разделов (партиций) диска с номером 0 вам нужно ввести последовательно следующие команды:
		<code>sel dis 0</code> [Enter] <code>lis par</code>.
	<li><code>create</code> - оператор создания раздела, тома или виртуального диска.
	<li><code>remove</code> - удаление буквы диска или точки подключения тома.
	<li><code>delete</code> - безвозвратное удаление выбранного объекта (раздела или тома). Если выбран несуществующий диск, он будет удалён из списка дисков.
</ul>

<p>Теперь рассмотрим ряд возможностей этой утилиты.</p>


<h3>Примеры работы</h3>

<h4>Разбитие диска</h4>

<p>При подключении нового винчестера вам надо его разбить на первичные и логические разделы, создать тома, назначить им буквы и метки, отформатироать в нужную файловую систему. Со всем этим легко справится эта утилита. Далее рассмотрим все действия по порядку. После каждой введённой команды, для её исполнения утилитой, нужно нажимать [Enter].</p>
<p>Предположим, что при выполнении команды <em>lis dis</em> подключённый винчестер имеет номер 3.</p>

<ul>
	<li><code>sel dis 3</code> - выбираем нужный диск для дальнейшей работы. <u>Не перепутайте номер!</u>
	<li><code>clean</code> - очищаем полностью содержимое диска на случай, если на нём была информация.
	<li><code>create par primary size=60000</code> - создаём основной раздел (для последующей установки системы) размером 60000 МБ. Если вы впоследствии планируете установку системы на VHD, вы можете сделать основной раздел размером 500 МБ - достаточно даже для загрузчика Win 10.
	<li><code>format quick fs=ntfs label="System"</code> - производим быстрое форматирование созданного раздела, параметр <em>fs</em> можно не указывать при форматировании в <em>ntfs</em>. Напомню, что вся информация в разделе при форматировании удаляется.
	<li><code>active</code> - помечаем раздел как активный. Всё, созданный раздел готов к установке операционной системы или загрузчика.
		<p>Также можно создать ещё 3 основных раздела. Но если вам нужно более 4 разделов на одном физическом диске, придётся вместо 4-го основного создать расширеный контейнер и делить его на логические диски.</p>
	<ul>
		<b>Создание логических дисков (опционально)</b>
		<li><code>create par extended</code> - создаём расширенный раздел на всю незанятую область, далее в нём размещаем логические диски.
		<li><code>create par logical size=10000</code> - создаём первый логический диск фиксированного размера. Таким же образом можно создавать и остальные необходимые. Если опустить параметр <em>size</em> - диск будет создан на всё оставшееся нераспределённое пространство.
			<p>Далее можно также отформатировать логический раздел, используя команду <em>format</em>.</p>
	</ul>
</ul>


<h4>Переназначение буквы тома</h4>
<ul>
	<li><code>lis vol</code> - просматриваем существующие тома, запоминаем номер тома для переназначения буквы. Например, это будет том 4.
	<li><code>sel vol 4</code> - выбираем нужный том.
	<li><code>assign letter=f</code> - назначаем ему букву F.
</ul>


<h4>Изменение размера тома без потери данных</h4>

<h5>Уменьшение (сжатие) тома</h5>

<p>Уменьшение тома возможно при наличии на нём свободного пространства, что можно уточнить, посмотрев его свойства.</p>
<ul>
	<li><code>lis vol</code> - предположим, нас интересует том 3
	<li><code>sel vol 3</code>
	<li><code>det vol</code> - смотрим свойства тома
		 <p><img class="toBig" src="{DIR}assets/cmd_dp2.png" alt="Diskpart - det vol" />"</p>
		 <p>Либо можно ввести команду <code>shrink querymax</code> для определения доступного числа байт для уменьшения тома.</p>
		 <p>Если свободное место позволяет, уменьшаем том:</p>
	<li><code>shrink desired=30</code> - уменьшаем том на 30 МБ.
		<p>Другой вариант команды: <code>shrink minimum=30</code> - делает то же самое, но с проверкой доступности указанного количества мегабайт для уменьшения. Если том не возможно уменьшить на указанный объём - операция выполнена не будет.</p>
		<p>Если указать команду без параметров: <code>shrink</code> - том будет сжат до минимально возможного размера. Этот способ чреват проблемами, поэтому привожу для информации, но пользоваться не рекомендую.</p>
</ul>
<p>При любом выполнении команды свободное место образуется сразу после уменьшаемого тома и становится доступным для дальнейшего использования.</p>

<h5>Увеличение тома</h5>
<p>Увеличить размер тома, при использовании базового диска, можно при наличии нераспределённого пространства после него.</p>
<ul>
	<li><code>sel vol 3</code> - выбираем том с нужным номером
	<li><code>extend size=30</code> - выбранный том будет расширен на 30 МБ. Если команда задана без параметра <em>size</em> - <code>extend</code> - том будет расширен на всё непрерывное свободное пространство, находящееся после него.
</ul>


<h4>Удаление тома</h4>
<ul>
	<p>Предположим, нужно удалить том под номером 5</p>
	<li><code>sel vol 5</code>
	<li><code>delete vol</code>
	<p><b>Внимание! Том 5 будет безвозвратно удалён со всеми данными, расположенными в нём.</b></p>
</ul>



<h3>Что не может Diskpart</h3>

<p>К сожалению, есть одна операция, которую невозможно выполнить при помощи этой полезной утилиты напрямую. Это увеличение размера одного тома за счёт другого. Думаю, это связано в первую очередь с попыткой сделать утилиту максимально универсальной и безопасной для данных на компьютере.</p>

<h4>Но как это всё же сделать</h4>

<p>Представим ситуацию, когда тома А и Б идут последовательно на одном жёстком диске, а нам нужно уменьшить том А и увеличить том Б. В этой операции уже будет не только переразметка жёсткого диска, а перенос информации, поскольку, уменьшив том А мы получаем свободное пространство между ним и томом Б. То есть, для увеличения тома Б утилите пришлось бы посекторно перенести информацию с секторов тома Б на сектора с меньшим смещением, освобождённые предыдущим действием. А это уже не безопасная операция, поскольку при перемещении данных может возникнуть перепад напряжения и часть информации может быть утеряна.</p>
<p>Обойти данное ограничение можно в несколько этапов, но при условии, что после максимального сжатия тома Б на диске останется свободное пространство не меньше сжатого тома Б или присутствует внешний носитель.</p>
<p>Алгоритм в такой ситуации будет прост:</p>
<ul>
	Пусть том А имеет номер 1, а том Б - номер 2
	<li><code>sel vol 1</code> - выбираем том А
	<li><code>shrink minimum=10240</code> - уменьшаем том А на 10ГБ
	<li>Копируем информацию с диска Б на другой раздел или внешний носитель. Проверяем целостность и доступность скопированной информации.
	<li><code>sel vol 2</code>
	<li><code>delete vol</code> - удаляем том Б.
	<li><code>create vol</code> - создаём новый том на всё свободное пространство, образовавшееся от сжатия тома А и удаления тома Б.
	<li>Перемещаем информацию с тома Б в новый том.
</ul>
<p>Да, получилось весьма многодельно, но в конечном итоге мы достигли поставленной задачи, а именно: расширили том Б за счёт свободного пространства тома А при помощи утилиты Diskpart.</p>

<h3>Использование виртуальных дисков</h3>
<p>Эта тема оказалась настолько обширной, что ей посвящена целая <a href="/content/100.Stat'i/Windows/2.createVHDX/" title="Виртуальные диски">серия статей</a>. При этом я стараюсь упоминать только основные возможности и избегать лишних технических подробностей, без которых можно обойтись в повседневном использовании.</p>