<p>Поскольку результаты работы с разностным виртуальным диском (ВД) сохраняются только в самом разностном (дочернем) диске, не затрагивая родительского, мы имеем два интересных последствия:</p>
<ol>
	<li>При удалении или очистке разностного диска мы будем иметь совершенно не изменившийся образ родительского диска с момента его создания.
	<li>При установке полезного софта, он также останется на разностном диске.
</ol>
<p>Если первый пункт нас ещё устраивает, то второй нам уже не удобен, поскольку хотелось бы создать образ системы на ВД, в котором уже установлены все нужные нам программы, внесены необходимые настройки, и к которому можно всегда вернуться в случае падения системы.</p>
<p>Сделать всё это можно безо всякого стороннего софта, используя всё ту же встроенную утилиту <b>diskpart</b> и следуя алгоритмам, описанным ниже.</p>
<p>Все коды приведены, исходя из предположения, что файл основного ВД имеет путь <b>e:\vhd\Win8.1.vhdx</b>, а файл разностного - <b>e:\vhd\Win8.1_diff.vhdx</b>. <u>Не забудьте поменять эти пути на используемые вами!</u></p>


<h2>Сохранение полезных изменений в основном ВД</h2>

<p>Если <u>вы уверены</u>, что работа вашей системы в данный момент вас полностью устраивает, и вы хотели бы вернуться к этому её состоянию в случае возникновения проблем, вам нужно сделать операцию объединения основного диска с разностным. Тогда все изменения, до этого хранившиеся в разностном диске, будут записаны в основной ВД.</p>
<p>Нужно чётко понимать, что информация из ВД будет окончательно объединена в основном ВД. Поэтому, возможно, вам следует предварительно создать его копию, благо это можно сделать обычным системным копированием.</p>
<ol>
	<li>Открываем <a href="/content/100.Stat'i/Windows/10.Cmd/" target="_blank">командную строку</a> с правами Администратора.
	<li>Вводим: <code>diskpart</code>.
	<li>Выбираем файл разностного ВД: <code>select vdisk file=e:\vhd\Win8.1_diff.vhdx</code>
	<li>И отсоединяем его: <code>detach vdisk</code>.
	<li>Объединяем его с родительским (основным) ВД: <code>merge vdisk depth=1</code>.
		<p>Отдельно хочу уточнить назначение параметра <em>depth</em>. Как я упоминал ранее, связь родитель - потомок возможна с любым количеством ВД. То есть, диск Д1.vhdx может иметь потомком диск Д2.vhdx, который, в свою очередь, может быть родительским для Д3.vhdx, который также может иметь потомка и т.д., etc. Поэтому для объединения информации выбирается потомок и в параметре <em>depth</em> указывается количество объединяемых поколений. Это важный момент, он нам пригодится в дальнейшем.</p>
	<li>Всё, мы имеем основной ВД с объединённой информацией и обнулённый дифференциальный диск, который можно использовать и далее.
</ol>
<p>Описанным способом мы можем после установки драйверов, установки и тестирования софта, настроек системы и проч., удостоверившись в стабильной работе ОС, сохранить её в основном ВД для дальнейшего использования.</p>


<h2>Восстановление стабильного состояния системы</h2>

<p>Теперь рассмотрим обратный случай, когда нас НЕ устраивают внесённые в систему изменения. Мы обнаружили провирусованный софт, стремящийся вылезти в сеть без нашего ведома, внесли какие-то некорректные настройки в системный реестр или просто каким-то образом получили BSOD.</p>
<p>В такой ситуации необходимо вернуть стабильное состояние системы, которое у нас сохранено в файле основного ВД.</p>
<p>Сделать это ещё проще. Достаточно удалить файл разностного диска и <a href="/content/100.Stat'i/Windows/5.Neubivaemaya_OS/" target="_blank">создать новый</a> по тому же пути. Тогда при следующей загрузке системы будет восстановлено её состояние на момент последнего изменения основного ВД, а все последующие изменения будут сохраняться в новом созданном разностном ВД.</p>


<h2>Двойная защита ОС</h2>

<p>Если вы хотите сделать неубиваемой не только операционную систему, но и те изменения, которые вы считаете нужными, но, всё же, до конца в этом не уверены, - для вас вариант создания цепочки разностных дисков.</p>
<p>Итак, рассмотрим сначала схему работы такой конструкции.</p>
<ol>
	<li>Основной файл ВД, в котором содержится установленная ОС, пакеты драйверов, кодеков и прочего проверенного и рабочего софта. Пусть этот файл имеет путь <b>e:\vhd\Win8.1.vhdx</b>.
	<li>Дополнительный файл ВД, содержащий работающий, но ещё полностью не протестированный софт, проверенные настройки и всё остальное, в чём вы ПОЧТИ уверены. Условный путь для него будет - <b>e:\vhd\Win8.1_allSoft.vhdx</b>, родительским файлом для которого будет назначен <b>e:\vhd\Win8.1.vhdx</b> при его создании. Этим файлом, скорее всего, вам жертвовать не придётся при восстановлении стабильного состояния системы.
	<li>И рабочий файл ВД - <b>e:\vhd\Win8.1_diff.vhdx</b>, с которого будет производиться загрузка ОС, и в котором будут сохранены все текущие изменения, вносимые пользователями. Эти изменения будут касаться работы тестируемого софта и прочего, чем можно легко пожертвовать при восстановлении ОС. Этот файл будет потомком по отношению к <b>e:\vhd\Win8.1_allSoft.vhdx</b>.
</ol>
<p>Таким образом, мы имеем цепочку связанных между собой ВД, накапливающих в себе информацию по степени важности прямо пропорциоональной старшинству в этой цепочке. Также в цепочке могут быть и 4, и 5 файлов ВД. При этом, скорее всего, для восстановления ОС потребуется пожертвовать самым младшим её членом, несущим самый низший уровень важности внесённых в систему изменений. Но при этом все изменения, повлекшие нестабильность работы всей ОС будут находиться именно в нём.</p>


<h2>Заключение</h2>

<p>Теперь, думаю, стало понятным, почему я в предыдущих статьях описывал ОС, установленную на виртуальный диск, как неубиваемую и не требующую бекаперов и антивирусов. В нынешней Windows можно встроенными средствами достичь безотказной работы, даже не прибегая к штатному архивированию, созданию точек восстановления системы и проч.</p>
<p>Надеюсь, что материал был вам полезен, и вы не зря потратили время на прочтение. В дальнейшем я планирую описать использование ОС, установленной на ВД, с внешнего носителя.</p>