<style type="text/css" media="screen">
	body, html {
      padding: 0;
      margin: 0;
      width: 100%;
      height: 100%;
  }
  /* #map *{
      width: 100%;
      height: 90%;
	}
 */
	.Ex {
		width: 100%;
		height: 350px;
		padding: 0;
		margin: 0;
		border: 4px solid #159;
	}

	.Ex.big {
		width: 100%;
		height: 500px;
	}

	#mapToggler {
		background: #eee;
	}

</style>

<div>
	<p>Нажмите <em>"Подробно"</em> для возможностей масштабирования скроллом и прокладки маршрута.</p>
	<p>Своё местоположение Вы можете определить как автоматически, так и кликом по карте.</p>
</div>
<!-- Блок с динамической картой -->
<input type="button" value="Подробно" id="mapToggler"/>

<div id="map" class="Ex"></div>


<script type="text/javascript">
	'use strict';
	var myMap, map = $('#map'),

	ymapsLoadind = ymapsLoadind || new Promise( (resolve, reject) => {
		let script = document.createElement('script');
		script.src = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU';
		document.head.append(script);
		// Отслеживаем загрузку библиотеки
		script.onload = () => {
			// Отслеживаем готовность ymaps
			window.ymaps.ready(() => resolve(window.ymaps))
		}
		script.onerror = () => reject(new Error(`Ошибка загрузки скрипта ${src}`));
	});

	/* if(sv.COORDS) $('head').cr('script', {src: 'https://api-maps.yandex.ru/2.1/?lang=ru_RU', type: 'text/javascript'}).on('load', function() {
		console.log('ymaps = ', ymaps); */

		ymapsLoadind.then(
		ymaps => {
			// Создание экземпляра карты и его привязка к контейнеру с
			// заданным id ("map").
			window.myMap = new ymaps.Map('map', {
				// При инициализации карты обязательно нужно указать
				// её центр и коэффициент масштабирования.
				center: sv.COORDS, // Москва
				zoom: 9,
				controls: [
					'geolocationControl'
					/* 'searchControl', 'fullscreenControl', 'routeButtonControl', 'routePanelControl' */
				]
			}, {
				minZoom: 5,
				searchControlProvider: 'yandex#search'
			});

			myMap.behaviors.disable(['scrollZoom']);

			myMap.geoObjects.add(new ymaps.GeoObject({
				geometry: {
            type: "Point",
            coordinates: sv.COORDS
        },
        properties: {
            // Контент метки.
						iconContent: sv.SITENAME,
						// balloonContent: '<strong>Адрес:</strong><br>' + sv.OWNER.address,
						hintContent: sv.DESCRIPTION,
						iconColor: '#0a0'
        }
			}, {
				preset: 'islands#blackStretchyIcon'
			}));

			// console.log(myGeoObject);



			/* // Создаем кнопку, с помощью которой пользователи смогут менять местами начальную и конечную точки маршрута.
			var switchPointsButton = new ymaps.control.Button({
					data: {content: "Поменять местами", title: "Поменять точки местами"},
					options: {selectOnClick: false, maxWidth: 160}
			});
			// Объявляем обработчик для кнопки.
			switchPointsButton.events.add('click', function () {
					// Меняет местами начальную и конечную точки маршрута.
					control.routePanel.switchPoints();
			});
			// myMap.controls.add(switchPointsButton); */


		}); // ymaps.ready

	// }); // ymaps.onload

	$('#mapToggler').on('click', function(e) {
		// console.log(this.value);

		map.toggleClass('big');

    //  - drag - перемещение карты при нажатой левой кнопки мыши;
    //  - magnifier.rightButton - увеличение области, выделенной правой кнопкой мыши.
		if(map.hasClass('big')) {

			this.value = 'Cвернуть';
			myMap.behaviors.enable(['scrollZoom']);
			myMap.controls.add('routePanelControl');

			var control = myMap.controls.get('routePanelControl');

			// Зададим состояние панели для построения машрутов.
			control.routePanel.state.set({
				// Тип маршрутизации.
				type: 'masstransit',
				// Выключим возможность задавать пункт назначения в поле ввода.
				toEnabled: false,
				// Адрес или координаты пункта назначения.
				to: sv.COORDS,
				// Включим возможность задавать пункт отправления в поле ввода.
				fromEnabled: true
			});

			// Зададим опции панели для построения машрутов.
			control.routePanel.options.set({
					// Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.
					allowSwitch: false,
					// Включим определение адреса по координатам клика.
					// Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.
					reverseGeocoding: true,
					// Зададим виды маршрутизации, которые будут доступны пользователям для выбора.
					types: { masstransit: true, pedestrian: true, taxi: true }
			});

		} else {

			this.value = 'Подробно';
			myMap.behaviors.disable(['scrollZoom']);
			myMap.controls.remove('routePanelControl');
		}


		setTimeout(myMap.container.fitToViewport.bind(myMap.container), 710);
	});


	$(document).e.add({
		keydown: function(e) {
			// console.log(e.ctrlKey);
			if(e.ctrlKey) {
				myMap.behaviors.enable(['scrollZoom']);
			}
		},
		keyup: function(e) {
			if(!e.ctrlKey) {
				myMap.behaviors.disable(['scrollZoom']);
			}
		},
	});


	[map].forEach(function(i) {
		if(!i) return;
		i.e.add({
			'mouseup': function(e) {
				e.stopPropagation();
			}
		});
	});

</script>